<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>(Open) Climate Code (resources)</title><link>https://example.com/</link><description></description><atom:link href="https://example.com/categories/cat_resources.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 03 Aug 2015 02:08:03 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>resources</title><link>https://example.com/posts/resources/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div&gt;&lt;p&gt;A [incomplete] list of resources on Python and Python for data analysis and visualization, loosely organized by category:&lt;/p&gt;
&lt;h4&gt;Object Oriented Programming in Python&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.google.com"&gt;www.google.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.freenetpages.co.uk/hp/alan.gauld/tutclass.htm"&gt;A good tutorial by Alan Gauld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://docs.python.org/2/tutorial/classes.html"&gt;classes&lt;/a&gt; entry from the official Python doc
 A short &lt;a href="http://www1.gly.bris.ac.uk/~walker/PythonEarthSci/PfES_3.pdf"&gt;pdf&lt;/a&gt; from Andrew Walker's &lt;a href="http://www1.gly.bris.ac.uk/~walker/PythonEarthSci/"&gt;Python for Earth Scientists&lt;/a&gt; course&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Python as a glue: wrapping of C, C++, Fortran or the Cython module&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.scipy.org/doc/numpy/user/c-info.python-as-glue.html"&gt;using python as a &lt;em&gt;glue&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.swig.org/Doc1.3/Python.html"&gt;SWIG (Simplified Wrapper and Interface Generator)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cython.org"&gt;Cython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.f2py.com/"&gt;f2py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-6A-Fortran-and-C.ipynb"&gt;A notebook on using C and Fortran with Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Real-time acquisition, physical programming&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pyserial.sourceforge.net"&gt;pyserial&lt;/a&gt;: Module that encapsulates the access for the serial port&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Real-World-Instrumentation-Python-Acquisition/dp/0596809565"&gt;Real World Instrumentation, Automated Data Acquisition and Control Systems&lt;/a&gt;: A book available on Amazon.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.monkmakes.com/?page_id=63"&gt;Programming Raspberry Pi: Getting Started with Python&lt;/a&gt;: book (not free) with code (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pyvisa.readthedocs.org/en/latest/"&gt;PyVISA&lt;/a&gt;: The PyVISA package enables you to control all kinds of measurement equipment through various busses (GPIB, RS232, USB) with Python programs&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Image processing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PIL &lt;a href="http://www.pythonware.com/products/pil/"&gt;(Python Image Library)&lt;/a&gt;: Image processing capabilities to your Python interpreter.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python-pillow.github.io/"&gt;pillow&lt;/a&gt;: A more user-friendly &lt;code&gt;fork&lt;/code&gt; of PIL&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scikit-image.org"&gt;scikit-image&lt;/a&gt;: more Image processing, built on top of Numpy / Scipy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Symbolic maths&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://example.com/posts/resources/www.sympy.org"&gt;SymPy&lt;/a&gt; library is a Python library for symbolic mathematics. It supports polynomials, calculus, solving equations, etc&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://www.sagemath.org/"&gt;sage&lt;/a&gt; software: &lt;code&gt;Mission: Creating a viable free open source alternative to Magma, Maple, Mathematica and Matlab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Geospatial statistics&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pysal.readthedocs.org/en/v1.6/"&gt;PySAL&lt;/a&gt;: PySAL is a cross-platform library of spatial analysis functions written in Python. It is intended to support the development of high level applications for spatial analysis.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://geopandas.org/"&gt;GeoPandas&lt;/a&gt;: A project based on &lt;a href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; to make working with geospatial data in python easier&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mapbox/rasterio"&gt;Rasterio&lt;/a&gt;: Clean and fast and geospatial raster I/O with Numpy support, developed by the team at &lt;a href="https://www.mapbox.com/"&gt;https://www.mapbox.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/pyproj/"&gt;Pyproj&lt;/a&gt;: Performs cartographic transformations and geodetic computations. Wrapper around the Proj version 4 library&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/GDAL/"&gt;Python GDAL/OGR&lt;/a&gt;: Python bindings + tools around the Geospatial Data Abstraction Library&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythongisresources.wordpress.com/interpolation"&gt;Python GIS resources&lt;/a&gt;: a blog on geospatial python&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hpgl.mit-ufa.com/"&gt;High Performance Geostatistics Library&lt;/a&gt;: A library written in C++ / Python implementing geostatistical algorithms (&lt;em&gt;e.g.&lt;/em&gt; kriging, correlograms, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Biology, ecology&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://biopython.org/wiki/Main_Page"&gt;Biopython&lt;/a&gt;: Biopython is a set of freely available tools for biological computation written in Python by an international team of developers.
+&lt;a href="https://pypi.python.org/pypi/GeoEco"&gt;GeoEco&lt;/a&gt;: Open source geoprocessing toolbox designed for coastal and marine researchers and GIS analysts who work with spatially-explicit ecological and oceanographic data. For Windows (&amp;gt; XP) only.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://galaxyproject.org/"&gt;Galaxy&lt;/a&gt;: Galaxy is a scientific workflow, data integration and data and analysis persistence and publishing platform that aims to make computational biology accessible to research scientists that do not have computer programming experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Computational Fluid Dynamics and PDE solvers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lorenabarba.com/blog/cfd-python-12-steps-to-navier-stokes/"&gt;CFD Python: 12 steps to Navier-Stokes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/barbagroup/CFDPython"&gt;github repository for the above&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openfoamwiki.net/index.php/Contrib_PyFoam"&gt;Python bindings to OpenFOAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://matforge.org/fipy/"&gt;FiPy: A Finite Volume PDE Solver Using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openedx.seas.gwu.edu/courses/GW/MAE6286/2014_fall/about"&gt;"Practical Numerical Methods with Python" MOOC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Python on the GPU&lt;/h4&gt;
&lt;p&gt;+&lt;a href="http://mathema.tician.de/software/pycuda/"&gt;PyCUDA&lt;/a&gt;: PyCUDA lets you access Nvidiaâ€˜s CUDA parallel computation API from Python&lt;/p&gt;
&lt;h4&gt;Parallel computing with Python / IPython&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ipython.org/ipython-doc/2/parallel/parallel_intro.html"&gt;IPython parallel introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y4hgalfhc1Y&amp;amp;index=49&amp;amp;list=PLYx7XA2nY5GfuhCvStxgbynFNrxr3VFog"&gt;Interactive Parallel computing with IPython&lt;/a&gt;: tutorials by Min. Raglan-Kelley at Scipy2014 (3 parts in the youtube list)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eyUeYnT-18s&amp;amp;index=32&amp;amp;list=PLs4CJRBY5F1Jm7H1dlesRvEgr-28QGXpR"&gt;IPython parallel for distributed computing&lt;/a&gt;: A talk at PyCON Australia by Nathan Faggian&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=05fA_DXgW-Y"&gt;IPython &amp;amp; Jupyter in depth: high productivity interactive and parallel python&lt;/a&gt;: A talk at PyCON 2015 by Thomas Kluyver and Kyle Kelley&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Signal processing in Python&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.scipy.org/doc/scipy/reference/tutorial/signal.html"&gt;scipy.signal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python-for-signal-processing.blogspot.co.nz/"&gt;Python for signal processing blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unpingco/Python-for-Signal-Processing"&gt;Python for signal processing github repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.springer.com/engineering/signals/book/978-3-319-01341-1"&gt;Python for signal processing book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Python for Matlab and R users&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://sebastianraschka.com/Articles/2014_matlab_vs_numpy.html"&gt;Moving from MATLAB matrices to NumPy arrays - A Matrix Cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://wiki.scipy.org/NumPy_for_Matlab_Users"&gt;NumPy for Matlab Users&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Some URLs and blogs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://scipy-lectures.github.io"&gt;Python Scientific Lectures Notes&lt;/a&gt;: Tutorial material on the scientific Python ecosystem, a quick introduction to central tools and techniques.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www1.gly.bris.ac.uk/~walker/PythonEarthSci/"&gt;Python for earth scientists&lt;/a&gt;: A two afternoons course by Andrew Walker (University of Bristol) on Python in the earth sciences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://oceanpython.org/"&gt;oceanpython&lt;/a&gt;: Python for oceanography&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pyaos.johnny-lin.com/"&gt;PyAOS&lt;/a&gt;: Python for the Atmospheric and Oceanic Sciences&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ocefpaf.github.io/"&gt;python4oceanographers&lt;/a&gt;: Learn python with examples applied to marine sciences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://jakevdp.github.io"&gt;Pythonic perambulations&lt;/a&gt;: A blog by Jake VanderPlas&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Github repositories: notebooks and accompanying material&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks"&gt;A gallery of interesting IPython Notebooks&lt;/a&gt;
"...a curated collection of IPython notebooks that are notable for some reason."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jakevdp/sklearn_scipy2013"&gt;Scikit-learn tutorial&lt;/a&gt;: Files and other info associated with the Scipy 2013 scikit-learn tutorial developed by GaÃ«l Varoquaux, Olivier Grisel and Jake VanderPlas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/fonnesbeck/statistical-analysis-python-tutorial"&gt;Statistical Analysis tutorial&lt;/a&gt; from Chris. Fonnesbeck.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/fonnesbeck/scipy2014_tutorial"&gt;Bayesian Statistical Analysis in Python&lt;/a&gt;: Ipython notebooks for the Scipy 2014 tutorial on Bayesian data analysis with Python, by Chris. Fonnesbeck.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.astroml.org"&gt;AstroML: Machine Learning and Data Mining for Astronomy&lt;/a&gt;: A library and tutorial by Jake VanderPlas and co-authors, accompanying the book &lt;a href="http://www.amazon.com/Statistics-Mining-Machine-Learning-Astronomy/dp/0691151687/"&gt;Statistics, Data Mining, and Machine Learning in Astronomy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jrjohansson/scientific-python-lectures"&gt;Scientific Python lectures from Robert Johansson&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.yhathq.com/posts/data-science-in-python-tutorial.html"&gt;Data Science in Python&lt;/a&gt;: A series of annotated notebooks on data science (i.e. geared towards machine learning) in python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://earthpy.org/"&gt;http://earthpy.org/&lt;/a&gt;: EarthPy is a collection of IPython notebooks with examples of Earth Science related Python code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[data science notebooks): IPython notebooks for data science, continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Some books&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://shop.oreilly.com/product/0636920023784.do"&gt;Python for Data Analysis&lt;/a&gt;: From Wes McKinney (Developer of &lt;a href="https://example.com/posts/resources/www.pandas.pydata.org"&gt;Pandas&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.greenteapress.com/thinkstats/"&gt;Think stats&lt;/a&gt;: Probability and statistics for programmers, from Allen Downey, pdf available for free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.greenteapress.com/compmod/"&gt;Think complexity&lt;/a&gt;: Complexity science (graphs, cellular automata, agent-based models), from Allen Downey, pdf available for free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.greenteapress.com/pythonhydro/pythonhydro.html"&gt;Python in hydrology&lt;/a&gt;: A book freely available in pdf, from Sat Kumar Tomer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://shop.oreilly.com/product/9780596529321.do"&gt;Programming collective intelligence&lt;/a&gt;: By Toby Segaran, Good intro on (general) Machine Learning algorithms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.manning.com/pharrington/"&gt;Machine Learning in action&lt;/a&gt;: By Peter Harrington.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.kevinsheppard.com/images/0/09/Python_introduction.pdf"&gt;Introduction to Python for Econometrics, Statistics and Numerical Analysis: Second Edition&lt;/a&gt;: By Kevin Sheppard, Oxford Uni.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.johnny-lin.com/pyintro/"&gt;A Hands-On Introduction to Using Python in the Atmospheric and Oceanic Sciences&lt;/a&gt;: By &lt;a href="http://www.johnny-lin.com"&gt;Johnny Lin&lt;/a&gt;, Professor of physics and head of the Climate Research Group at North Park University.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://geosci.uchicago.edu/~rtp1/PrinciplesPlanetaryClimate/index.html"&gt;principles of planetary climate&lt;/a&gt;: by Ray Pierrehumbert. Excellent book on the physics of planetary climates, with freely downloadable python code to follow the examples given in the book.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Some interesting libraries, built on top of the main Scientific stack&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pymc-devs.github.io/pymc/"&gt;PYMC&lt;/a&gt;: By Chris Fonnesbeck, Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.stanford.edu/~mwaskom/software/seaborn/"&gt;Seaborn&lt;/a&gt;: Statistical data visualization, by Michael Waskom. Its &lt;a href="http://www.stanford.edu/~mwaskom/software/seaborn/linear_models.html"&gt;graphical representation of linear models&lt;/a&gt; is particularly interesting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/yhat/ggplot/"&gt;ggplot&lt;/a&gt;: For &lt;a href="http://cran.r-project.org"&gt;R&lt;/a&gt; users, a 'port' of the &lt;a href="http://ggplot2.org"&gt;ggplot2&lt;/a&gt; package to Python, see &lt;a href="http://blog.yhathq.com/posts/ggplot-0.4-released.html"&gt;here&lt;/a&gt; for what's new in the latest release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/coards"&gt;coards&lt;/a&gt;: A COARDS compliant time parser. See also &lt;a href="http://netcdf4-python.googlecode.com/svn/trunk/docs/netcdftime.netcdftime-module.html"&gt;netcdftime&lt;/a&gt; which is part of the &lt;a href="https://code.google.com/p/netcdf4-python/"&gt;NetCDF4 module&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.imr.no/~bjorn/python/seawater/index.html"&gt;seawater&lt;/a&gt;: Similar to the MATLAB toolboxes SEAWATER from CSIRO and parts of OCEANS from Woods Hole Institute.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/fluid"&gt;fluid&lt;/a&gt;: Procedures to study fluids on Python, focused for oceanography, meteorology and related sciences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/regeirk/kPyWavelet"&gt;kyPyWavelet&lt;/a&gt;: Continuous wavelet transform module for Python &lt;em&gt;ala&lt;/em&gt; Torrence and Compo. Some manual edits were necessary to make it work for me ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://code.google.com/p/pyresample/"&gt;pyresample&lt;/a&gt;: Resampling (reprojection) of geospatial image data in Python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://rpy.sourceforge.net/rpy2.html"&gt;Rpy2&lt;/a&gt;: calling R from Python&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Some articles on open and reproducible research&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dx.doi.org/10.1126/science.1213847"&gt;Reproducible Research in Computational Science&lt;/a&gt;, Roger D. Peng, Science 334, 1226 (2011).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dx.doi.org/10.1126/science.1218263"&gt;Shining Light into Black Boxes&lt;/a&gt;, A. Morin et al., Science 336, 159-160 (2012).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dx.doi.org/doi:10.1038/nature10836"&gt;The case for open computer programs&lt;/a&gt;, D.C. Ince, Nature 482, 485 (2012).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.plosbiology.org/article/info%3Adoi%2F10.1371%2Fjournal.pbio.1001745"&gt;Best practices for scientific computing&lt;/a&gt;: Paper in PLOS Biology exposing some of the tools and methods to build better Scientific software.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>books</category><category>ipython notebooks</category><category>libraries</category><category>resources</category><category>tutorials</category><guid>https://example.com/posts/resources/</guid><pubDate>Mon, 03 Aug 2015 02:02:05 GMT</pubDate></item></channel></rss>